---
output_path: "./output/coco"
symbol: resnet_34_kps
gpus: '0'
CLASS_AGNOSTIC: true
network:
  #pretrained: "./model/pretrained_model/resnet-34"
  #pretrained_epoch: 0
  pretrained: "./model/pretrained_model/resnet_34_rfcn_coco_keypoints"
  pretrained_epoch: 6
  PIXEL_MEANS:
  - 103.06
  - 115.90
  - 123.15
  IMAGE_STRIDE: 0
  RPN_FEAT_STRIDE: 16
  FIXED_PARAMS:
  - bn_data
  - conv0
  - bn0
  - stage1
  ANCHOR_RATIOS: [0.5, 1, 2]
  ANCHOR_SCALES: [2, 4, 8, 16, 32]
  NUM_ANCHORS: 15
  PREDICT_KEYPOINTS: true
  KEYPOINTS_POOLED_SIZE: 7
dataset:
  NUM_CLASSES: 2
  NUM_KEYPOINTS: 17
  dataset: coco
  dataset_path: "./data/coco"
  image_set: keypoints_train2017
  root_path: "./data"
  test_image_set: keypoints_val2017
  proposal: rpn
TRAIN:
  SCALES: [[640,1280], [656,1280], [672,1280], [688, 1280], [704,1280], [720,1280], [736,1280], [752, 1280], [768,1280], [784, 1280], [800, 1280]] 
  frequent: 100
  kvstore: device
  lr: 0.002
  lr_step: '4'
  warmup: true
  warmup_lr: 0.00005
  # typically we will use 8000 warmup step for single GPU for COCO
  warmup_step: 2000
  wd: 0.0001
  momentum: 0.9
  begin_epoch: 0
  end_epoch: 6
  model_prefix: 'resnet_34_kps'
  # whether resume training
  RESUME: false
  # whether flip image
  FLIP: false
  # whether shuffle image
  SHUFFLE: true
  # whether use OHEM
  ENABLE_OHEM: true
  # size of images for each device, 2 for rcnn, 1 for rpn and e2e
  BATCH_IMAGES: 1
  # e2e changes behavior of anchor loader and metric
  END2END: true
  # group images with similar aspect ratio
  ASPECT_GROUPING: true
  # R-CNN
  # rcnn rois batch size
  BATCH_ROIS: -1
  BATCH_ROIS_OHEM: 256
  # rcnn rois sampling params
  FG_FRACTION: 0.25
  FG_THRESH: 0.5
  BG_THRESH_HI: 0.5
  BG_THRESH_LO: 0.0
  # rcnn bounding box regression params
  BBOX_REGRESSION_THRESH: 0.5
  BBOX_WEIGHTS:
  - 1.0
  - 1.0
  - 1.0
  - 1.0
  # kp_cls_weight, kp_reg_weight
  KEYPOINT_LOSS_WEIGHTS:
  - 1.0
  - 1.0
  # RPN anchor loader
  # rpn anchors batch size
  RPN_BATCH_SIZE: 512
  # rpn anchors sampling params
  RPN_FG_FRACTION: 0.5
  RPN_POSITIVE_OVERLAP: 0.7
  RPN_NEGATIVE_OVERLAP: 0.3
  RPN_CLOBBER_POSITIVES: false
  # rpn bounding box regression params
  RPN_BBOX_WEIGHTS:
  - 1.0
  - 1.0
  - 1.0
  - 1.0
  RPN_POSITIVE_WEIGHT: -1.0
  # used for end2end training
  # RPN proposal
  CXX_PROPOSAL: true
  RPN_NMS_THRESH: 0.7
  RPN_PRE_NMS_TOP_N: 6000
  RPN_POST_NMS_TOP_N: 1000
  RPN_MIN_SIZE: 1
  # approximate bounding box regression
  BBOX_NORMALIZATION_PRECOMPUTED: false
  BBOX_MEANS:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  BBOX_STDS:
  - 0.1
  - 0.1
  - 0.2
  - 0.2
TEST:
  IMAGES_PER_GPU: 4
  SCALES: [[800,1280]]
  # use rpn to generate proposal
  HAS_RPN: true
  # size of images for each device
  BATCH_IMAGES: 1
  # RPN proposal
  CXX_PROPOSAL: true
  RPN_NMS_THRESH: 0.7
  RPN_PRE_NMS_TOP_N: 6000
  RPN_POST_NMS_TOP_N: 300
  RPN_MIN_SIZE: 1
  # RCNN nms
  NMS: 0.3
  test_epoch: 6
  max_per_image: 100

